- name: 'setup swap file'
  shell: "dd if=/dev/zero of=/swap bs=512K count=$(free -m | awk '/^Mem:/{print $2}') && chmod 0600 /swap && mkswap /swap && swapon /swap"
  args:
    creates: /swap

- name: "setup swap on boot"
  lineinfile:
    dest: /etc/fstab
    line: "/swap  swap  sw  0 0"
    state: present

- name: SSH config directory
  when: ansible_user != "vagrant"
  file:
    state: directory
    path: "/home/{{ansible_user}}/.ssh"
    owner: '{{ansible_user}}'
    group: '{{ansible_user}}'
    mode: 0700

- name: authorized SSH keys
  when: ansible_user != "vagrant"
  copy:
    src: roles/base/templates/authorized_keys
    dest: "/home/{{ansible_user}}/.ssh/authorized_keys"
    owner: '{{ansible_user}}'
    group: '{{ansible_user}}'
    mode: 0600

- name: update hostname file
  copy:
    dest: /etc/hostname
    owner: root
    group: root
    mode: 0644
    content: "{{inventory_hostname}}"
  register: etc_hostname

- name: set hostname
  command: hostname -F /etc/hostname
  when: etc_hostname.changed

- name: "Build hosts file"
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_default_ipv4.address }} {{item}}"
    state: present
  with_items: "{{ groups['all'] }}"

- name: Install base packages
  apt: pkg={{item}} state=present update-cache=yes
  with_items:
    - build-essential
    - htop
    - ncdu
    - fail2ban
    - libldap2-dev
    - libpq-dev
    - libsasl2-dev
    - libyaml-dev
    - mailutils
    - postfix
    - postgresql-client
    - python3
    - python3-dev
    - python-httplib2
    - python-psycopg2
    - python-virtualenv

- include_role:
    name: base
    tasks_from: systemd_journal_remote_server.yml
  when: 'upgrade_only is not defined and master_node'

- include_role:
    name: base
    tasks_from: systemd_journal_remote_node.yml
  when: 'upgrade_only is not defined and not master_node'

- include_role:
    name: base
    tasks_from: postfix.yml
  when: 'upgrade_only is not defined and ec2_smtp_server is defined'

# Install AWS SSM
# This is included by default as of Ubuntu 18.04 in AWS (so only install
# on 16.04)
- include_role:
    name: base
    tasks_from: aws-ssm.yml
  when: setup_cloudwatch and upgrade_only is not defined and ansible_distribution_version == "16.04" and ansible_distribution == "Ubuntu"

# Install AWS CloudWatch Agent
- include: aws-cwa.yml
  when: setup_cloudwatch and upgrade_only is not defined
