- name: Install message broker packages
  apt: pkg={{item}} state=present update-cache=yes
  when: master_node
  with_items:
    - rabbitmq-server

- name: RabbitMQ config
  when: master_node
  template:
    src: roles/squad/templates/rabbitmq.config
    dest: /etc/rabbitmq/rabbitmq.config
  notify: restart-rabbitmq

- meta: flush_handlers

- name: create virtualenv
  command: virtualenv --python=/usr/bin/python3 {{install_base}}
  args:
    creates: "{{install_base}}/bin/python3"

- name: get python path
  shell: "{{install_base}}/bin/python3 -c 'import sys; print(sys.path[-1])'"
  register: python_path
  changed_when: False

- name: install linaro_ldap_backends
  register: linaro_ldap_backends
  when: linaro_ldap
  template:
    src: roles/squad/templates/linaro_ldap_backends.py
    dest: '{{python_path.stdout}}/linaro_ldap_backends.py'

- name: install psycopg2
  command: "{{install_base}}/bin/pip install -U --no-binary :all: psycopg2"
  args:
    chdir: '{{install_base}}'
  register: install_psycopg2
  changed_when: "'up-to-date: psycopg2' not in install_psycopg2.stdout"

- name: install Django ldap auth module
  command: "{{install_base}}/bin/pip install --upgrade --upgrade-strategy=only-if-needed django-auth-ldap"
  register: install_django_ldap
  changed_when: "'up-to-date: django-auth-ldap' not in install_django_ldap.stdout"

- user:
    name: squad
    home: "{{install_base}}"
    createhome: no
    shell: /bin/bash
    generate_ssh_key: "{{ 'yes' if ansible_user == 'vagrant' else 'no' }}"

- name: Linaro LDAP settings file
  register: settings
  when: linaro_ldap
  copy:
    src: secrets/linaro_ldap.py
    dest: "{{install_base}}/linaro_ldap.py"
    owner: root
    group: squad
    mode: 0640

- name: data directory
  file:
    path: "{{install_base}}/data/squad"
    owner: squad
    group: squad
    mode: 0755
    state: directory

- name: squad secret file
  register: secret
  copy:
    content: "{{django_secret}}"
    dest: "{{install_base}}/data/squad/secret.dat"
    owner: root
    group: squad
    mode: 0640

- name: environment file
  register: environmentfile
  template:
    src: roles/squad/templates/environment
    dest: '{{install_base}}/environment'

- name: .pgpass
  register: pgpass
  template:
    src: roles/squad/templates/pgpass
    dest: '{{install_base}}/.pgpass'
    owner: squad
    group: squad
    mode: 0400

- name: .bashrc
  template:
    src: roles/squad/templates/bashrc
    dest: '{{install_base}}/.bashrc'

- name: .bash_profile
  template:
    src: roles/squad/templates/bash_profile
    dest: '{{install_base}}/.bash_profile'

- name: .ssh
  file:
    state: directory
    path: "{{install_base}}/.ssh"
    owner: squad
    group: squad
    mode: 0700

- name: private SSH key
  when: ansible_user != "vagrant"
  copy:
    src: secrets/id_rsa
    dest: "{{install_base}}/.ssh/id_rsa"
    owner: squad
    group: squad
    mode: 0600

- name: public SSH key
  when: ansible_user != "vagrant"
  copy:
    src: roles/squad/templates/id_rsa.pub
    dest: "{{install_base}}/.ssh/id_rsa.pub"
    owner: squad
    group: squad
    mode: 0600
