#!/bin/sh

set -eu

ENV=${ENV:-staging}
export TF_DATA_DIR=.terraform_${ENV}

conf=$(dirname $0)/auth.conf
if [ -r "$conf" ]; then
    . "$conf"
fi
if [ -z "${aws_profile:-}" ]; then
    echo "E: \$aws_profile must be set."
    echo "I: Either set it in the environment, or in $conf"
    exit 1
fi

# data
duration=3600

# assume the qa-admin role
credentials_dir=$HOME/.cache/qa-reports.linaro.org
credentials="$credentials_dir/admin_credentials"
mkdir -p "$credentials_dir"
chmod 700 "$credentials_dir"

if [ -e "$credentials" ]; then
    now=$(date +%s)
    credentials_created=$(stat --format=%Y "$credentials")
    if [ $((now - credentials_created)) -gt $duration ]; then
        rm -f "$credentials"
    fi
fi
if [ ! -e "$credentials" ] || [ ! -s "$credentials" ]; then
    touch "$credentials"
    chmod 600 "$credentials"
    aws2-wrap --profile "$aws_profile" --export >> "$credentials"
fi

# export AWS{ACCESS_KEY_ID,SECRET_ACCESS_KEY,SESSION_TOKEN}
. $credentials

# environment
./scripts/set_env.sh "$ENV"
eval $(./scripts/load_db_password "$ENV")

# init if needed
if [ ! -d "${TF_DATA_DIR}" ]; then
    terraform init
fi

if [ $# -eq 0 ]; then
    set -- plan .
fi

export TF_CLI_ARGS="-var-file=shared.tfvars -var-file=${ENV}.tfvars"

terraform "$@"

# set the stage for ansible
terraform state pull | ./scripts/state_to_ansible_inventory.py > "../ansible/hosts.${ENV}"
